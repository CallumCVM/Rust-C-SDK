#pragma once

#include "..\UnityEngine\UnicodeString*.h"
#include "..\System\Action.h"

namespace Rust
{
	class AsyncTextureLoad : public CustomYieldInstruction // 0x0
	{
	public:
		UnityEngine::UnicodeString* filename; // 0x10 (size: 0x8, flags: 0x1, type: 0xe)
		UnityEngine::UnicodeString* cachename; // 0x18 (size: 0x8, flags: 0x1, type: 0xe)
		System::Action* worker; // 0x20 (size: 0x8, flags: 0x1, type: 0x12)
		__int64 buffer; // 0x28 (size: 0x8, flags: 0x1, type: 0x18)
		int size; // 0x30 (size: 0x4, flags: 0x1, type: 0x8)
		int width; // 0x34 (size: 0x4, flags: 0x1, type: 0x8)
		int height; // 0x38 (size: 0x4, flags: 0x1, type: 0x8)
		int format; // 0x3c (size: 0x4, flags: 0x1, type: 0x8)
		bool normal; // 0x40 (size: 0x1, flags: 0x1, type: 0x2)
		bool dither; // 0x41 (size: 0x1, flags: 0x1, type: 0x2)
		bool hqmode; // 0x42 (size: 0x1, flags: 0x1, type: 0x2)
		bool cache; // 0x43 (size: 0x1, flags: 0x1, type: 0x2)
	}; // size = 0x48
}
