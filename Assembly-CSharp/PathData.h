#pragma once

#include "..\UnityEngine\UnicodeString*.h"
#include "..\WorldSerialization\VectorData.h"

namespace rust 
{
	class PathData : public Object // 0x0
	{
	public:
		UnityEngine::UnicodeString* name; // 0x10 (size: 0x8, flags: 0x6, type: 0xe)
		WorldSerialization::VectorData* nodes; // 0x18 (size: 0x8, flags: 0x6, type: 0x1d)
		bool spline; // 0x20 (size: 0x1, flags: 0x6, type: 0x2)
		bool start; // 0x21 (size: 0x1, flags: 0x6, type: 0x2)
		bool end; // 0x22 (size: 0x1, flags: 0x6, type: 0x2)
		float width; // 0x24 (size: 0x4, flags: 0x6, type: 0xc)
		float offset; // 0x28 (size: 0x4, flags: 0x6, type: 0xc)
		float padding; // 0x2c (size: 0x4, flags: 0x6, type: 0xc)
		float fade; // 0x30 (size: 0x4, flags: 0x6, type: 0xc)
		float scaling; // 0x34 (size: 0x4, flags: 0x6, type: 0xc)
		int splat; // 0x38 (size: 0x4, flags: 0x6, type: 0x8)
		int topology; // 0x3c (size: 0x4, flags: 0x6, type: 0x8)
	}; // size = 0x40
}
