#pragma once

#include "..\UnityEngine\UnicodeString*.h"
#include "ItemDefinition.h"
#include "..\ProtoBuf\Item\InstanceData.h"
#include "..\System\Action<Item>.h"
#include "ItemContainer.h"
#include "EntityRef.h"

namespace rust 
{
	class Item : public Object // 0x0
	{
	public:
		UnityEngine::UnicodeString* amountTextOverride; // 0x10 (size: 0x8, flags: 0x6, type: 0xe)
		ItemDefinition* info; // 0x18 (size: 0x8, flags: 0x6, type: 0x12)
		ProtoBuf::Item::InstanceData* instanceData; // 0x20 (size: 0x8, flags: 0x6, type: 0x12)
		UnityEngine::UnicodeString* name; // 0x28 (size: 0x8, flags: 0x6, type: 0xe)
		UnityEngine::UnicodeString* text; // 0x30 (size: 0x8, flags: 0x6, type: 0xe)
		System::Action<Item> OnDirty; // 0x38 (size: 0x8, flags: 0x1, type: 0x15)
		ItemContainer* contents; // 0x40 (size: 0x8, flags: 0x6, type: 0x12)
		ItemContainer* parent; // 0x48 (size: 0x8, flags: 0x6, type: 0x12)
		EntityRef worldEnt; // 0x50 (size: 0x10, flags: 0x1, type: 0x11)
		EntityRef heldEntity; // 0x60 (size: 0x10, flags: 0x1, type: 0x11)
		float _condition; // 0x70 (size: 0x4, flags: 0x1, type: 0xc)
		float _maxCondition; // 0x74 (size: 0x4, flags: 0x1, type: 0xc)
		unsigned int uid; // 0x78 (size: 0x4, flags: 0x6, type: 0x9)
		bool dirty; // 0x7c (size: 0x1, flags: 0x6, type: 0x2)
		int amount; // 0x80 (size: 0x4, flags: 0x6, type: 0x8)
		int position; // 0x84 (size: 0x4, flags: 0x6, type: 0x8)
		float busyTime; // 0x88 (size: 0x4, flags: 0x6, type: 0xc)
		float removeTime; // 0x8c (size: 0x4, flags: 0x6, type: 0xc)
		float fuel; // 0x90 (size: 0x4, flags: 0x6, type: 0xc)
		bool isServer; // 0x94 (size: 0x1, flags: 0x6, type: 0x2)
		unsigned __int64 skin; // 0x98 (size: 0x8, flags: 0x6, type: 0xb)
		Flag flags; // 0xa0 (size: 0x4, flags: 0x6, type: 0x11)
	}; // size = 0xa8
}
