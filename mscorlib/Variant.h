#pragma once

#include "..\System\Int16.h"
#include "..\System\UInt16.h"
#include "..\System\SByte.h"
#include "..\System\BRECORD.h"

namespace System
{
	class Variant : public ValueType // 0x0
	{
	public:
		System::Int16 vt; // 0x10 (size: 0x2, flags: 0x6, type: 0x6)
		System::UInt16 wReserved1; // 0x12 (size: 0x2, flags: 0x6, type: 0x7)
		System::UInt16 wReserved2; // 0x14 (size: 0x2, flags: 0x6, type: 0x7)
		System::UInt16 wReserved3; // 0x16 (size: 0x2, flags: 0x6, type: 0x7)
		__int64 llVal; // 0x18 (size: 0x8, flags: 0x6, type: 0xa)
		int lVal; // 0x18 (size: 0x4, flags: 0x6, type: 0x8)
		unsigned char bVal; // 0x18 (size: 0x1, flags: 0x6, type: 0x5)
		System::Int16 iVal; // 0x18 (size: 0x2, flags: 0x6, type: 0x6)
		float fltVal; // 0x18 (size: 0x4, flags: 0x6, type: 0xc)
		double dblVal; // 0x18 (size: 0x8, flags: 0x6, type: 0xd)
		System::Int16 boolVal; // 0x18 (size: 0x2, flags: 0x6, type: 0x6)
		__int64 bstrVal; // 0x18 (size: 0x8, flags: 0x6, type: 0x18)
		System::SByte cVal; // 0x18 (size: 0x1, flags: 0x6, type: 0x4)
		System::UInt16 uiVal; // 0x18 (size: 0x2, flags: 0x6, type: 0x7)
		unsigned int ulVal; // 0x18 (size: 0x4, flags: 0x6, type: 0x9)
		unsigned __int64 ullVal; // 0x18 (size: 0x8, flags: 0x6, type: 0xb)
		int intVal; // 0x18 (size: 0x4, flags: 0x6, type: 0x8)
		unsigned int uintVal; // 0x18 (size: 0x4, flags: 0x6, type: 0x9)
		__int64 pdispVal; // 0x18 (size: 0x8, flags: 0x6, type: 0x18)
		System::BRECORD bRecord; // 0x18 (size: 0x10, flags: 0x6, type: 0x11)
	}; // size = 0x28
}
