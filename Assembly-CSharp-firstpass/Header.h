#pragma once

#include "..\System\UInt16.h"

namespace rust 
{
	class Header : public ValueType // 0x0
	{
	public:
		unsigned int size; // 0x10 (size: 0x4, flags: 0x6, type: 0x9)
		int width; // 0x14 (size: 0x4, flags: 0x6, type: 0x8)
		int height; // 0x18 (size: 0x4, flags: 0x6, type: 0x8)
		System::UInt16 planes; // 0x1c (size: 0x2, flags: 0x6, type: 0x7)
		System::UInt16 bitCount; // 0x1e (size: 0x2, flags: 0x6, type: 0x7)
		unsigned int compression; // 0x20 (size: 0x4, flags: 0x6, type: 0x9)
		unsigned int sizeImage; // 0x24 (size: 0x4, flags: 0x6, type: 0x9)
		int xPelsPerMeter; // 0x28 (size: 0x4, flags: 0x6, type: 0x8)
		int yPelsPerMeter; // 0x2c (size: 0x4, flags: 0x6, type: 0x8)
		unsigned int clrUsed; // 0x30 (size: 0x4, flags: 0x6, type: 0x9)
		unsigned int clrImportant; // 0x34 (size: 0x4, flags: 0x6, type: 0x9)
	}; // size = 0x38
}
