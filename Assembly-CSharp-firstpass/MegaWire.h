#pragma once

#include "MegaWireStrandedMesher.h"
#include "..\UnityEngine\Vector3.h"
#include "..\UnityEngine\LayerMask.h"
#include "..\UnityEngine\Matrix4x4.h"
#include "MegaWireSolver.h"
#include "..\UnityEngine\List.h"
#include "MegaWireWind.h"
#include "..\UnityEngine\Material.h"
#include "..\UnityEngine\GameObject.h"
#include "..\UnityEngine\Color.h"

namespace rust 
{
	class MegaWire : public MonoBehaviour // 0x18
	{
	public:
		MegaWireStrandedMesher* strandedMesher; // 0x18 (size: 0x8, flags: 0x6, type: 0x12)
		MegaWireSolver* verletsolver; // 0x20 (size: 0x8, flags: 0x6, type: 0x12)
		UnityEngine::List<MegaWireConnectionDef>* connections; // 0x28 (size: 0x8, flags: 0x6, type: 0x15)
		UnityEngine::List<MegaWireSpan>* spans; // 0x30 (size: 0x8, flags: 0x6, type: 0x15)
		MegaWireWind* wind; // 0x38 (size: 0x8, flags: 0x6, type: 0x12)
		UnityEngine::Material* material; // 0x40 (size: 0x8, flags: 0x6, type: 0x12)
		UnityEngine::GameObject* startObj; // 0x48 (size: 0x8, flags: 0x6, type: 0x12)
		UnityEngine::GameObject* endObj; // 0x50 (size: 0x8, flags: 0x6, type: 0x12)
		UnityEngine::List<MegaWireLodLevel>* lods; // 0x58 (size: 0x8, flags: 0x6, type: 0x15)
		UnityEngine::List<UnityEngine.Transform>* poles; // 0x60 (size: 0x8, flags: 0x6, type: 0x15)
		bool Rebuild; // 0x68 (size: 0x1, flags: 0x6, type: 0x2)
		float fudge; // 0x6c (size: 0x4, flags: 0x6, type: 0xc)
		float spring; // 0x70 (size: 0x4, flags: 0x6, type: 0xc)
		float damp; // 0x74 (size: 0x4, flags: 0x6, type: 0xc)
		float timeStep; // 0x78 (size: 0x4, flags: 0x6, type: 0xc)
		float Mass; // 0x7c (size: 0x4, flags: 0x6, type: 0xc)
		UnityEngine::Vector3 gravity; // 0x80 (size: 0xc, flags: 0x6, type: 0x11)
		float airdrag; // 0x8c (size: 0x4, flags: 0x6, type: 0xc)
		float massRand; // 0x90 (size: 0x4, flags: 0x6, type: 0xc)
		bool doCollisions; // 0x94 (size: 0x1, flags: 0x6, type: 0x2)
		bool useraycast; // 0x95 (size: 0x1, flags: 0x6, type: 0x2)
		UnityEngine::LayerMask collisionmask; // 0x98 (size: 0x4, flags: 0x6, type: 0x11)
		float collisionoff; // 0x9c (size: 0x4, flags: 0x6, type: 0xc)
		float collisiondist; // 0xa0 (size: 0x4, flags: 0x6, type: 0xc)
		float floor; // 0xa4 (size: 0x4, flags: 0x6, type: 0xc)
		int points; // 0xa8 (size: 0x4, flags: 0x6, type: 0x8)
		int iters; // 0xac (size: 0x4, flags: 0x6, type: 0x8)
		int frameWait; // 0xb0 (size: 0x4, flags: 0x6, type: 0x8)
		int frameNum; // 0xb4 (size: 0x4, flags: 0x6, type: 0x8)
		bool stiffnessSprings; // 0xb8 (size: 0x1, flags: 0x6, type: 0x2)
		float stiffrate; // 0xbc (size: 0x4, flags: 0x6, type: 0xc)
		float stiffdamp; // 0xc0 (size: 0x4, flags: 0x6, type: 0xc)
		bool lengthConstraints; // 0xc4 (size: 0x1, flags: 0x6, type: 0x2)
		UnityEngine::Matrix4x4 wtm; // 0xc8 (size: 0x40, flags: 0x1, type: 0x11)
		bool showphysics; // 0x108 (size: 0x1, flags: 0x6, type: 0x2)
		bool showconnections; // 0x109 (size: 0x1, flags: 0x6, type: 0x2)
		bool showmeshparams; // 0x10a (size: 0x1, flags: 0x6, type: 0x2)
		float windEffect; // 0x10c (size: 0x4, flags: 0x6, type: 0xc)
		bool uselod; // 0x110 (size: 0x1, flags: 0x6, type: 0x2)
		float disableDist; // 0x114 (size: 0x4, flags: 0x6, type: 0xc)
		bool disableOnNotVisible; // 0x118 (size: 0x1, flags: 0x6, type: 0x2)
		float lodreducesides; // 0x11c (size: 0x4, flags: 0x6, type: 0xc)
		float lodreducesegs; // 0x120 (size: 0x4, flags: 0x6, type: 0xc)
		float startAlpha; // 0x124 (size: 0x4, flags: 0x6, type: 0xc)
		UnityEngine::Vector3 startRot; // 0x128 (size: 0xc, flags: 0x6, type: 0x11)
		UnityEngine::Vector3 startOffset; // 0x134 (size: 0xc, flags: 0x6, type: 0x11)
		float endAlpha; // 0x140 (size: 0x4, flags: 0x6, type: 0xc)
		UnityEngine::Vector3 endRot; // 0x144 (size: 0xc, flags: 0x6, type: 0x11)
		UnityEngine::Vector3 endOffset; // 0x150 (size: 0xc, flags: 0x6, type: 0x11)
		bool hidespans; // 0x15c (size: 0x1, flags: 0x6, type: 0x2)
		bool disableOnDistance; // 0x15d (size: 0x1, flags: 0x6, type: 0x2)
		float distfromcamera; // 0x160 (size: 0x4, flags: 0x6, type: 0xc)
		float rbodyforce; // 0x164 (size: 0x4, flags: 0x6, type: 0xc)
		bool Enabled; // 0x168 (size: 0x1, flags: 0x6, type: 0x2)
		bool ShowWire; // 0x169 (size: 0x1, flags: 0x6, type: 0x2)
		float awakeTime; // 0x16c (size: 0x4, flags: 0x6, type: 0xc)
		bool displayGizmo; // 0x170 (size: 0x1, flags: 0x6, type: 0x2)
		UnityEngine::Color gizmoColor; // 0x174 (size: 0x10, flags: 0x6, type: 0x11)
		float stretch; // 0x184 (size: 0x4, flags: 0x6, type: 0xc)
		float warmPhysicsTime; // 0x188 (size: 0x4, flags: 0x6, type: 0xc)
		bool builduvs; // 0x18c (size: 0x1, flags: 0x6, type: 0x2)
		float startTime; // 0x190 (size: 0x4, flags: 0x6, type: 0xc)
		bool showWindParams; // 0x194 (size: 0x1, flags: 0x6, type: 0x2)
		bool showPhysicsAdv; // 0x195 (size: 0x1, flags: 0x6, type: 0x2)
		bool showAttach; // 0x196 (size: 0x1, flags: 0x6, type: 0x2)
	}; // size = 0x198
}
