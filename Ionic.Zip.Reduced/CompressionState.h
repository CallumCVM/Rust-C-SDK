#pragma once

#include "..\System\Int16.h"
#include "..\System\Char.h"

namespace rust 
{
	class CompressionState : public Object // 0x0
	{
	public:
		bool* inUse; // 0x10 (size: 0x8, flags: 0x26, type: 0x1d)
		unsigned char* unseqToSeq; // 0x18 (size: 0x8, flags: 0x26, type: 0x1d)
		int* mtfFreq; // 0x20 (size: 0x8, flags: 0x26, type: 0x1d)
		unsigned char* selector; // 0x28 (size: 0x8, flags: 0x26, type: 0x1d)
		unsigned char* selectorMtf; // 0x30 (size: 0x8, flags: 0x26, type: 0x1d)
		unsigned char* generateMTFValues_yy; // 0x38 (size: 0x8, flags: 0x26, type: 0x1d)
		unsigned char* sendMTFValues_len; // 0x40 (size: 0x8, flags: 0x6, type: 0x1d)
		int* sendMTFValues_rfreq; // 0x48 (size: 0x8, flags: 0x6, type: 0x1d)
		int* sendMTFValues_fave; // 0x50 (size: 0x8, flags: 0x26, type: 0x1d)
		System::Int16* sendMTFValues_cost; // 0x58 (size: 0x8, flags: 0x26, type: 0x1d)
		int* sendMTFValues_code; // 0x60 (size: 0x8, flags: 0x6, type: 0x1d)
		unsigned char* sendMTFValues2_pos; // 0x68 (size: 0x8, flags: 0x26, type: 0x1d)
		bool* sentMTFValues4_inUse16; // 0x70 (size: 0x8, flags: 0x26, type: 0x1d)
		int* stack_ll; // 0x78 (size: 0x8, flags: 0x26, type: 0x1d)
		int* stack_hh; // 0x80 (size: 0x8, flags: 0x26, type: 0x1d)
		int* stack_dd; // 0x88 (size: 0x8, flags: 0x26, type: 0x1d)
		int* mainSort_runningOrder; // 0x90 (size: 0x8, flags: 0x26, type: 0x1d)
		int* mainSort_copy; // 0x98 (size: 0x8, flags: 0x26, type: 0x1d)
		bool* mainSort_bigDone; // 0xa0 (size: 0x8, flags: 0x26, type: 0x1d)
		int* heap; // 0xa8 (size: 0x8, flags: 0x6, type: 0x1d)
		int* weight; // 0xb0 (size: 0x8, flags: 0x6, type: 0x1d)
		int* parent; // 0xb8 (size: 0x8, flags: 0x6, type: 0x1d)
		int* ftab; // 0xc0 (size: 0x8, flags: 0x26, type: 0x1d)
		unsigned char* block; // 0xc8 (size: 0x8, flags: 0x6, type: 0x1d)
		int* fmap; // 0xd0 (size: 0x8, flags: 0x6, type: 0x1d)
		System::Char* sfmap; // 0xd8 (size: 0x8, flags: 0x6, type: 0x1d)
		System::Char* quadrant; // 0xe0 (size: 0x8, flags: 0x6, type: 0x1d)
	}; // size = 0xe8
}
