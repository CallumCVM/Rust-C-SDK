#pragma once

#include "..\Ionic\Crc\CRC32.h"
#include "..\System\IO\Stream.h"
#include "..\Ionic\BZip2\BZip2InputStream\CState.h"
#include "..\System\Char.h"
#include "..\Ionic\BZip2\BZip2InputStream\DecompressionState.h"

namespace Ionic
{
	namespace BZip2
{
	class BZip2InputStream : public Stream // 0x18
	{
	public:
		Ionic::Crc::CRC32* crc; // 0x18 (size: 0x8, flags: 0x21, type: 0x12)
		System::IO::Stream* input; // 0x20 (size: 0x8, flags: 0x1, type: 0x12)
		Ionic::BZip2::BZip2InputStream::DecompressionState* data; // 0x28 (size: 0x8, flags: 0x1, type: 0x12)
		bool _disposed; // 0x30 (size: 0x1, flags: 0x1, type: 0x2)
		bool _leaveOpen; // 0x31 (size: 0x1, flags: 0x1, type: 0x2)
		__int64 totalBytesRead; // 0x38 (size: 0x8, flags: 0x1, type: 0xa)
		int last; // 0x40 (size: 0x4, flags: 0x1, type: 0x8)
		int origPtr; // 0x44 (size: 0x4, flags: 0x1, type: 0x8)
		int blockSize100k; // 0x48 (size: 0x4, flags: 0x1, type: 0x8)
		bool blockRandomised; // 0x4c (size: 0x1, flags: 0x1, type: 0x2)
		int bsBuff; // 0x50 (size: 0x4, flags: 0x1, type: 0x8)
		int bsLive; // 0x54 (size: 0x4, flags: 0x1, type: 0x8)
		int nInUse; // 0x58 (size: 0x4, flags: 0x1, type: 0x8)
		int currentChar; // 0x5c (size: 0x4, flags: 0x1, type: 0x8)
		Ionic::BZip2::BZip2InputStream::CState currentState; // 0x60 (size: 0x4, flags: 0x1, type: 0x11)
		unsigned int storedBlockCRC; // 0x64 (size: 0x4, flags: 0x1, type: 0x9)
		unsigned int storedCombinedCRC; // 0x68 (size: 0x4, flags: 0x1, type: 0x9)
		unsigned int computedBlockCRC; // 0x6c (size: 0x4, flags: 0x1, type: 0x9)
		unsigned int computedCombinedCRC; // 0x70 (size: 0x4, flags: 0x1, type: 0x9)
		int su_count; // 0x74 (size: 0x4, flags: 0x1, type: 0x8)
		int su_ch2; // 0x78 (size: 0x4, flags: 0x1, type: 0x8)
		int su_chPrev; // 0x7c (size: 0x4, flags: 0x1, type: 0x8)
		int su_i2; // 0x80 (size: 0x4, flags: 0x1, type: 0x8)
		int su_j2; // 0x84 (size: 0x4, flags: 0x1, type: 0x8)
		int su_rNToGo; // 0x88 (size: 0x4, flags: 0x1, type: 0x8)
		int su_rTPos; // 0x8c (size: 0x4, flags: 0x1, type: 0x8)
		int su_tPos; // 0x90 (size: 0x4, flags: 0x1, type: 0x8)
		System::Char su_z; // 0x94 (size: 0x2, flags: 0x1, type: 0x3)
	}; // size = 0x98
}
