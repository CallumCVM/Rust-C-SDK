#pragma once

#include "..\System\Char.h"

namespace rust 
{
	class DecompressionState : public Object // 0x0
	{
	public:
		bool* inUse; // 0x10 (size: 0x8, flags: 0x26, type: 0x1d)
		unsigned char* seqToUnseq; // 0x18 (size: 0x8, flags: 0x26, type: 0x1d)
		unsigned char* selector; // 0x20 (size: 0x8, flags: 0x26, type: 0x1d)
		unsigned char* selectorMtf; // 0x28 (size: 0x8, flags: 0x26, type: 0x1d)
		int* unzftab; // 0x30 (size: 0x8, flags: 0x26, type: 0x1d)
		int* gLimit; // 0x38 (size: 0x8, flags: 0x26, type: 0x1d)
		int* gBase; // 0x40 (size: 0x8, flags: 0x26, type: 0x1d)
		int* gPerm; // 0x48 (size: 0x8, flags: 0x26, type: 0x1d)
		int* gMinlen; // 0x50 (size: 0x8, flags: 0x26, type: 0x1d)
		int* cftab; // 0x58 (size: 0x8, flags: 0x26, type: 0x1d)
		unsigned char* getAndMoveToFrontDecode_yy; // 0x60 (size: 0x8, flags: 0x26, type: 0x1d)
		System::Char* temp_charArray2d; // 0x68 (size: 0x8, flags: 0x26, type: 0x1d)
		unsigned char* recvDecodingTables_pos; // 0x70 (size: 0x8, flags: 0x26, type: 0x1d)
		int* tt; // 0x78 (size: 0x8, flags: 0x6, type: 0x1d)
		unsigned char* ll8; // 0x80 (size: 0x8, flags: 0x6, type: 0x1d)
	}; // size = 0x88
}
